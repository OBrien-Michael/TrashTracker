# This workflow will build and test a .NET MAUI Application for Windows
#
#

name: CI/CD .NET Maui

# Define when the workflow should run. On a push to main, a PR to main
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

# Jobs to run
jobs:

  #Run Linting
  run-lint:
    uses: ./.github/workflows/super-linter.yml

    #Permissions for the Linter
    permissions:
      contents: read
      packages: read
      statuses: write


  build-windows: #Windows build Job
    runs-on: windows-latest  # Runs on latest windows

    #Checkout the repo
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    #Install MAUI workload
    - name: Install MAUI workload
      run: dotnet workload install maui

    # Execute build the project
    - name: Build for windows
      run: dotnet build TrashTracker/TrashTracker.csproj -c Release -f:net8.0-windows10.0.19041.0   #Build a release based on target framework

    # Upload the build artifact
    - uses: actions/upload-artifact@v4
      with:
          name: windows artifact
          path: '**/bin/Release'



  build-android: #Android build Job
    runs-on: windows-latest  # Runs on latest Windows

    #Checkout the repo
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    #Install MAUI workload
    - name: Install MAUI workload
      run: dotnet workload install maui

    # Execute build the project
    - name: Build for android
      run: dotnet build TrashTracker/TrashTracker.csproj -c Release -f:net8.0-android   #Build a release based on target framework

    # Upload the build artifact
    - uses: actions/upload-artifact@v4
      with:
          name: android artifact
          path: '**/bin/Release'


  test: #Test Job
    # Requires builds to pass first
    needs: [ build-windows, build-android ]
    runs-on: windows-latest  # Runs on latest windows

    steps:
        #Download the built artifact
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with: 
          name: windows artifact
          
      # Execute all unit tests in the solution
      - name: Execute unit tests
        run: dotnet test TrashTrackerTestSuite/TrashTrackerTestSuite.csproj


